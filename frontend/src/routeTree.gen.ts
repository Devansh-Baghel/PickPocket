/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppSinkRouteImport } from './routes/app/sink'
import { Route as AppSettingsRouteImport } from './routes/app/settings'
import { Route as AppProfileRouteImport } from './routes/app/profile'
import { Route as AppLoginRouteImport } from './routes/app/login'
import { Route as AppSavesSaveIdRouteImport } from './routes/app/saves/$saveId'

const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppSinkRoute = AppSinkRouteImport.update({
  id: '/sink',
  path: '/sink',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppProfileRoute = AppProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any)
const AppLoginRoute = AppLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AppRoute,
} as any)
const AppSavesSaveIdRoute = AppSavesSaveIdRouteImport.update({
  id: '/saves/$saveId',
  path: '/saves/$saveId',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/login': typeof AppLoginRoute
  '/app/profile': typeof AppProfileRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/sink': typeof AppSinkRoute
  '/app/': typeof AppIndexRoute
  '/app/saves/$saveId': typeof AppSavesSaveIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app/login': typeof AppLoginRoute
  '/app/profile': typeof AppProfileRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/sink': typeof AppSinkRoute
  '/app': typeof AppIndexRoute
  '/app/saves/$saveId': typeof AppSavesSaveIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/login': typeof AppLoginRoute
  '/app/profile': typeof AppProfileRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/sink': typeof AppSinkRoute
  '/app/': typeof AppIndexRoute
  '/app/saves/$saveId': typeof AppSavesSaveIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/login'
    | '/app/profile'
    | '/app/settings'
    | '/app/sink'
    | '/app/'
    | '/app/saves/$saveId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app/login'
    | '/app/profile'
    | '/app/settings'
    | '/app/sink'
    | '/app'
    | '/app/saves/$saveId'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/login'
    | '/app/profile'
    | '/app/settings'
    | '/app/sink'
    | '/app/'
    | '/app/saves/$saveId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/sink': {
      id: '/app/sink'
      path: '/sink'
      fullPath: '/app/sink'
      preLoaderRoute: typeof AppSinkRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/settings': {
      id: '/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/profile': {
      id: '/app/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/login': {
      id: '/app/login'
      path: '/login'
      fullPath: '/app/login'
      preLoaderRoute: typeof AppLoginRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/saves/$saveId': {
      id: '/app/saves/$saveId'
      path: '/saves/$saveId'
      fullPath: '/app/saves/$saveId'
      preLoaderRoute: typeof AppSavesSaveIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppLoginRoute: typeof AppLoginRoute
  AppProfileRoute: typeof AppProfileRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppSinkRoute: typeof AppSinkRoute
  AppIndexRoute: typeof AppIndexRoute
  AppSavesSaveIdRoute: typeof AppSavesSaveIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppLoginRoute: AppLoginRoute,
  AppProfileRoute: AppProfileRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppSinkRoute: AppSinkRoute,
  AppIndexRoute: AppIndexRoute,
  AppSavesSaveIdRoute: AppSavesSaveIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
